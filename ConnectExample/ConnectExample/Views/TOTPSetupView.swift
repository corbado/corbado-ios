//
//  TOTPSetupView.swift
//  ConnectExample
//
//  Created by Martin on 30/4/2025.
//

import SwiftUI
import CoreImage.CIFilterBuiltins
import Amplify

struct TOTPSetupView: View {
    @EnvironmentObject var authViewModel: AuthViewModel
    
    @State private var setupDetails: TOTPSetupDetails? = nil
    
    // For QR Code generation
    let qrContext = CIContext()
    let qrFilter = CIFilter.qrCodeGenerator()
    
    var body: some View {
        VStack(spacing: 20) {
            if authViewModel.isLoading {
                ProgressView("Fetching setup details...")
            } else if setupDetails != nil {
                InstructionsView()
                let details = setupDetails!
                
                if let qrImage = generateQRCode(from: details.setupUri) {
                    Image(uiImage: qrImage)
                        .resizable()
                        .interpolation(.none) // Keep pixels sharp
                        .scaledToFit()
                        .frame(width: 200, height: 200)
                        .padding(.vertical)
                } else {
                    ProgressView("Generating QR Code...")
                        .frame(width: 200, height: 200)
                        .padding(.vertical)
                }
                
                HStack {
                    Text("Setup Key:")
                    Text(details.sharedSecret)
                        .font(.system(.body, design: .monospaced))
                        .lineLimit(1)
                        .truncationMode(.middle) // Show start/end if long
                    Button {
                        UIPasteboard.general.string = details.sharedSecret
                        // Optional: show feedback that it was copied
                    } label: {
                        Image(systemName: "doc.on.doc")
                    }
                }
                .padding(.horizontal)
                
                TextField("Enter 6-digit code", text: $authViewModel.totpCode)
                    .keyboardType(.numberPad)
                    .textContentType(.oneTimeCode)
                    .padding()
                    .background(Color(.secondarySystemBackground))
                    .cornerRadius(8)                    
                
                Button {
                    Task {
                        await authViewModel.completeSetupTOTP()
                    }
                } label: {
                    if authViewModel.isLoading {
                        ProgressView()
                            .tint(.white)
                            .frame(maxWidth: .infinity)
                    } else {
                        Text("Complete")
                            .frame(maxWidth: .infinity)
                    }
                }
                .buttonStyle(.borderedProminent)                
                .disabled(authViewModel.isLoading || authViewModel.totpCode.count != 6)
                
                
                Spacer() // Push content to the top
            }
        }
        .padding()
        .navigationTitle("MFA Setup")
        .navigationBarTitleDisplayMode(.inline)
        .onAppear {
            if setupDetails == nil {
                Task {
                    setupDetails = await authViewModel.initSetupTOTP()
                }
            }
        }
        // Dismiss keyboard on drag
        .gesture(DragGesture().onChanged({ _ in
            UIApplication.shared.sendAction(#selector(UIResponder.resignFirstResponder), to: nil, from: nil, for: nil)
        }))
    }
        
    func generateQRCode(from setupURI: URL?) -> UIImage? {
        guard let uriString = setupURI?.absoluteString else {
            return nil
        }
        qrFilter.message = Data(uriString.utf8)
        
        if let outputImage = qrFilter.outputImage {
            // Scale up the QR code for better rendering
            let transform = CGAffineTransform(scaleX: 10, y: 10)
            let scaledQrImage = outputImage.transformed(by: transform)
            
            if let cgimg = qrContext.createCGImage(scaledQrImage, from: scaledQrImage.extent) {
                let out = UIImage(cgImage: cgimg)
                
                return out
            }
        }
        
        return nil
    }
}

// MARK: - Helper Subview for Instructions
struct InstructionsView: View {
    var body: some View {
        VStack(alignment: .leading, spacing: 8) {
            Text("1. Open your authenticator app (e.g., Google Authenticator, Authy).")
            Text("2. Scan the QR code below or manually enter the Setup Key.")
            Text("3. Enter the 6-digit code generated by the app.")
        }
        .padding()
        .background(Color(.systemGray6))
        .cornerRadius(10)
    }
}

#Preview {
    TOTPSetupView()
}
