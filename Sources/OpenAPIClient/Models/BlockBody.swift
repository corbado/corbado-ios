//
// BlockBody.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct BlockBody: Sendable, Codable, ParameterConvertible, Hashable {

    public var block: BlockType
    public var authType: AuthType
    public var data: BlockBodyData
    public var alternatives: [BlockBody]?
    public var error: RequestError?
    public var continueOnOtherDevice: ContinueOnOtherDevice?

    public init(block: BlockType, authType: AuthType, data: BlockBodyData, alternatives: [BlockBody]? = nil, error: RequestError? = nil, continueOnOtherDevice: ContinueOnOtherDevice? = nil) {
        self.block = block
        self.authType = authType
        self.data = data
        self.alternatives = alternatives
        self.error = error
        self.continueOnOtherDevice = continueOnOtherDevice
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case block
        case authType
        case data
        case alternatives
        case error
        case continueOnOtherDevice
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(block, forKey: .block)
        try container.encode(authType, forKey: .authType)
        try container.encode(data, forKey: .data)
        try container.encodeIfPresent(alternatives, forKey: .alternatives)
        try container.encodeIfPresent(error, forKey: .error)
        try container.encodeIfPresent(continueOnOtherDevice, forKey: .continueOnOtherDevice)
    }
}

