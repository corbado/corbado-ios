//
// UserEmail.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** User&#39;s email */
public struct UserEmail: Sendable, Codable, ParameterConvertible, Hashable {

    /** generic ID */
    public var ID: String
    public var email: String
    /** Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss format */
    public var created: String
    /** Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss format */
    public var updated: String
    public var status: Status

    public init(ID: String, email: String, created: String, updated: String, status: Status) {
        self.ID = ID
        self.email = email
        self.created = created
        self.updated = updated
        self.status = status
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ID
        case email
        case created
        case updated
        case status
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(ID, forKey: .ID)
        try container.encode(email, forKey: .email)
        try container.encode(created, forKey: .created)
        try container.encode(updated, forKey: .updated)
        try container.encode(status, forKey: .status)
    }
}

