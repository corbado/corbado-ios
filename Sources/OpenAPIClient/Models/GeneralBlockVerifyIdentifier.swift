//
// GeneralBlockVerifyIdentifier.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GeneralBlockVerifyIdentifier: Sendable, Codable, ParameterConvertible, Hashable {

    public var blockType: String
    public var verificationMethod: VerificationMethod
    public var identifier: String
    public var retryNotBefore: Int?
    public var error: RequestError?
    public var alternativeVerificationMethods: [GeneralBlockVerifyIdentifierAlternativeVerificationMethodsInner]
    public var isPostLoginVerification: Bool

    public init(blockType: String, verificationMethod: VerificationMethod, identifier: String, retryNotBefore: Int? = nil, error: RequestError? = nil, alternativeVerificationMethods: [GeneralBlockVerifyIdentifierAlternativeVerificationMethodsInner], isPostLoginVerification: Bool) {
        self.blockType = blockType
        self.verificationMethod = verificationMethod
        self.identifier = identifier
        self.retryNotBefore = retryNotBefore
        self.error = error
        self.alternativeVerificationMethods = alternativeVerificationMethods
        self.isPostLoginVerification = isPostLoginVerification
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case blockType
        case verificationMethod
        case identifier
        case retryNotBefore
        case error
        case alternativeVerificationMethods
        case isPostLoginVerification
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(blockType, forKey: .blockType)
        try container.encode(verificationMethod, forKey: .verificationMethod)
        try container.encode(identifier, forKey: .identifier)
        try container.encodeIfPresent(retryNotBefore, forKey: .retryNotBefore)
        try container.encodeIfPresent(error, forKey: .error)
        try container.encode(alternativeVerificationMethods, forKey: .alternativeVerificationMethods)
        try container.encode(isPostLoginVerification, forKey: .isPostLoginVerification)
    }
}

