//
// ClientCapabilities.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ClientCapabilities: Sendable, Codable, ParameterConvertible, Hashable {

    public var conditionalCreate: Bool?
    public var conditionalMediation: Bool?
    public var hybridTransport: Bool?
    public var passkeyPlatformAuthenticator: Bool?
    public var userVerifyingPlatformAuthenticator: Bool?

    public init(conditionalCreate: Bool? = nil, conditionalMediation: Bool? = nil, hybridTransport: Bool? = nil, passkeyPlatformAuthenticator: Bool? = nil, userVerifyingPlatformAuthenticator: Bool? = nil) {
        self.conditionalCreate = conditionalCreate
        self.conditionalMediation = conditionalMediation
        self.hybridTransport = hybridTransport
        self.passkeyPlatformAuthenticator = passkeyPlatformAuthenticator
        self.userVerifyingPlatformAuthenticator = userVerifyingPlatformAuthenticator
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case conditionalCreate
        case conditionalMediation
        case hybridTransport
        case passkeyPlatformAuthenticator
        case userVerifyingPlatformAuthenticator
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(conditionalCreate, forKey: .conditionalCreate)
        try container.encodeIfPresent(conditionalMediation, forKey: .conditionalMediation)
        try container.encodeIfPresent(hybridTransport, forKey: .hybridTransport)
        try container.encodeIfPresent(passkeyPlatformAuthenticator, forKey: .passkeyPlatformAuthenticator)
        try container.encodeIfPresent(userVerifyingPlatformAuthenticator, forKey: .userVerifyingPlatformAuthenticator)
    }
}

