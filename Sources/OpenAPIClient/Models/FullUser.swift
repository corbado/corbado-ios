//
// FullUser.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** User entry with emails and phone numbers */
public struct FullUser: Sendable, Codable, ParameterConvertible, Hashable {

    /** ID of the user */
    public var ID: String
    public var name: String
    public var fullName: String
    /** Timestamp of when the entity was created in yyyy-MM-dd'T'HH:mm:ss format */
    public var created: String
    /** Timestamp of when the entity was last updated in yyyy-MM-dd'T'HH:mm:ss format */
    public var updated: String
    public var status: Status
    public var emails: [UserEmail]
    public var phoneNumbers: [UserPhoneNumber]
    public var usernames: [UserUsername]
    public var socialAccounts: [UserSocialAccount]

    public init(ID: String, name: String, fullName: String, created: String, updated: String, status: Status, emails: [UserEmail], phoneNumbers: [UserPhoneNumber], usernames: [UserUsername], socialAccounts: [UserSocialAccount]) {
        self.ID = ID
        self.name = name
        self.fullName = fullName
        self.created = created
        self.updated = updated
        self.status = status
        self.emails = emails
        self.phoneNumbers = phoneNumbers
        self.usernames = usernames
        self.socialAccounts = socialAccounts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ID
        case name
        case fullName
        case created
        case updated
        case status
        case emails
        case phoneNumbers
        case usernames
        case socialAccounts
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(ID, forKey: .ID)
        try container.encode(name, forKey: .name)
        try container.encode(fullName, forKey: .fullName)
        try container.encode(created, forKey: .created)
        try container.encode(updated, forKey: .updated)
        try container.encode(status, forKey: .status)
        try container.encode(emails, forKey: .emails)
        try container.encode(phoneNumbers, forKey: .phoneNumbers)
        try container.encode(usernames, forKey: .usernames)
        try container.encode(socialAccounts, forKey: .socialAccounts)
    }
}

