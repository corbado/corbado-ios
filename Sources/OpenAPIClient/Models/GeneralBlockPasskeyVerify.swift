//
// GeneralBlockPasskeyVerify.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GeneralBlockPasskeyVerify: Sendable, Codable, ParameterConvertible, Hashable {

    public enum LoginHint: String, Sendable, Codable, CaseIterable {
        case cda = "cda"
    }
    public var blockType: String
    public var challenge: String
    public var identifierValue: String
    public var loginHint: LoginHint?

    public init(blockType: String, challenge: String, identifierValue: String, loginHint: LoginHint? = nil) {
        self.blockType = blockType
        self.challenge = challenge
        self.identifierValue = identifierValue
        self.loginHint = loginHint
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case blockType
        case challenge
        case identifierValue
        case loginHint
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(blockType, forKey: .blockType)
        try container.encode(challenge, forKey: .challenge)
        try container.encode(identifierValue, forKey: .identifierValue)
        try container.encodeIfPresent(loginHint, forKey: .loginHint)
    }
}

